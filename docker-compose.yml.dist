version: '2'

services:

  # Proxy to terminate TLS, sitting in front of treg. The proxy uses
  # letsencrypt to create certificates which are also used for tserve
  proxy:
    image: dougg/nginx-letsencrypt-proxy
    env_file: .env
    ports:
        - "80:80"
        - "443:443"
    volumes:
        - letsencrypt:/etc/letsencrypt

  # tserve MQTT broker
  tserve:
    build: .
    # image: trafero/tstack
    volumes:
      - letsencrypt::/etc/letsencrypt
    command: >
      /go/bin/tserve
      -etcdhosts=$ETCD_HOSTS
      -cafile=/etc/letsencrypt/live/${BROKER_NAME}/fullchain.pem
      -certfile=/etc/letsencrypt/live/${BROKER_NAME}/cert.pem
      -keyfile=/etc/letsencrypt/live/${BROKER_NAME}/privkey.pem
    ports:
      - "1883:1883"
      - "8883:8883"
    volumes:
      - letsencrypt:/etc/letsencrypt

  # Registration service
  treg:
    build: .
    # image: trafero/tstack
    volumes:
      - letsencrypt:/etc/letsencrypt
    command: >
      /go/bin/treg
      -etcdhosts=$ETCD_HOSTS
      -regkey=$REGISTRATION_KEY
      -mqtturl=$BROKER_URL
      -cacertfile=/etc/letsencrypt/live/${BROKER_NAME}/fullchain.pem
    ports:
      - "8000:8000"
    volumes:
      - letsencrypt:/etc/letsencrypt

  # Add a user for the consumer
  consumeruser:
    build: .
    # image: trafero/tstack
    command: >
      /go/bin/tuser
      -etcdhosts=$ETCD_HOSTS
      -password=$CONSUMER_PASSWORD
      -username=$CONSUMER_USERNAME
      -rights="#"

  # Consumes messages and adds them to graphite
  consumer:
    build: .
    #image: trafero/tstack
    command: >
      /go/bin/tconsume
      -ctype=graphite
      -username=$CONSUMER_USERNAME
      -password=$CONSUMER_PASSWORD
      -mqtturl=tcp://tserve:1883/
      -topic="#"
      -graphitehost=graphite
  
  # Backend storage for treg users
  etcd:
    image: quay.io/coreos/etcd:v3.1.8
    command: >
      /usr/local/bin/etcd
      -name etcd0
      -advertise-client-urls http://127.0.0.1:2379
      -listen-client-urls http://0.0.0.0:2379
      -initial-advertise-peer-urls http://127.0.0.1:2380
      -listen-peer-urls http://0.0.0.0:2380
      -initial-cluster-token etcd-cluster-1
      -initial-cluster etcd0=http://127.0.0.1:2380
      -initial-cluster-state new
      -data-dir=/etcd
    volumes:
      - etcd:/etcd

  # Frontend to Graphite
  grafana:
    image: grafana/grafana
    restart: always
    ports:
        - "3000:3000"
    volumes:
        - grafana:/var/lib/grafana
    environment:
        - GF_SECURITY_ADMIN_PASSWORD=$GRAFANA_ADMIN_PASSWORD
        - GF_INSTALL_PLUGINS=briangann-gauge-panel,natel-discrete-panel,vonage-status-panel
        - GF_SNAPSHOTS_EXTERNAL_ENABLED=false
        - GF_USERS_AUTO_ASSIGN_ORG=true
        - GF_USERS_ALLOW_SIGN_UP=false

  # Data storage
  graphite:
    image: ennexa/graphite
    restart: always
    volumes:
        - graphite:/opt/graphite/storage/whisper
    
volumes:
  etcd:
    driver: local
  graphite:
    driver: local
  grafana:
    driver: local
  letsencrypt:
    driver: local

